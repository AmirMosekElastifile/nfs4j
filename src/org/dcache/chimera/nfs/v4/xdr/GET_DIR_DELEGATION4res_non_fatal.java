/*
 * Automatically generated by jrpcgen 1.0.7 on 2/21/09 1:22 AM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package org.dcache.chimera.nfs.v4.xdr;
import org.dcache.chimera.nfs.v4.*;
import org.dcache.xdr.*;
import java.io.IOException;

public class GET_DIR_DELEGATION4res_non_fatal implements XdrAble {
    public int gddrnf_status;
    public GET_DIR_DELEGATION4resok gddrnf_resok4;
    public boolean gddrnf_will_signal_deleg_avail;

    public GET_DIR_DELEGATION4res_non_fatal() {
    }

    public GET_DIR_DELEGATION4res_non_fatal(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        xdr.xdrEncodeInt(gddrnf_status);
        switch ( gddrnf_status ) {
        case gddrnf4_status.GDD4_OK:
            gddrnf_resok4.xdrEncode(xdr);
            break;
        case gddrnf4_status.GDD4_UNAVAIL:
            xdr.xdrEncodeBoolean(gddrnf_will_signal_deleg_avail);
            break;
        }
    }

    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        gddrnf_status = xdr.xdrDecodeInt();
        switch ( gddrnf_status ) {
        case gddrnf4_status.GDD4_OK:
            gddrnf_resok4 = new GET_DIR_DELEGATION4resok(xdr);
            break;
        case gddrnf4_status.GDD4_UNAVAIL:
            gddrnf_will_signal_deleg_avail = xdr.xdrDecodeBoolean();
            break;
        }
    }

}
// End of GET_DIR_DELEGATION4res_non_fatal.java
