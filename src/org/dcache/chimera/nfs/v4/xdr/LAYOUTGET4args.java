/*
 * Automatically generated by jrpcgen 1.0.7 on 2/21/09 1:22 AM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package org.dcache.chimera.nfs.v4.xdr;
import org.dcache.chimera.nfs.v4.*;
import org.dcache.xdr.*;
import java.io.IOException;

public class LAYOUTGET4args implements XdrAble {
    public boolean loga_signal_layout_avail;
    public int loga_layout_type;
    public int loga_iomode;
    public offset4 loga_offset;
    public length4 loga_length;
    public length4 loga_minlength;
    public stateid4 loga_stateid;
    public count4 loga_maxcount;

    public LAYOUTGET4args() {
    }

    public LAYOUTGET4args(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        xdr.xdrEncodeBoolean(loga_signal_layout_avail);
        xdr.xdrEncodeInt(loga_layout_type);
        xdr.xdrEncodeInt(loga_iomode);
        loga_offset.xdrEncode(xdr);
        loga_length.xdrEncode(xdr);
        loga_minlength.xdrEncode(xdr);
        loga_stateid.xdrEncode(xdr);
        loga_maxcount.xdrEncode(xdr);
    }

    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        loga_signal_layout_avail = xdr.xdrDecodeBoolean();
        loga_layout_type = xdr.xdrDecodeInt();
        loga_iomode = xdr.xdrDecodeInt();
        loga_offset = new offset4(xdr);
        loga_length = new length4(xdr);
        loga_minlength = new length4(xdr);
        loga_stateid = new stateid4(xdr);
        loga_maxcount = new count4(xdr);
    }

}
// End of LAYOUTGET4args.java
