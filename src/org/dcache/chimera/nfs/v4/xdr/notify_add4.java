/*
 * Automatically generated by jrpcgen 1.0.7 on 2/21/09 1:22 AM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package org.dcache.chimera.nfs.v4.xdr;
import org.dcache.xdr.*;
import java.io.IOException;

public class notify_add4 implements XdrAble {
    public notify_remove4 [] nad_old_entry;
    public notify_entry4 nad_new_entry;
    public nfs_cookie4 [] nad_new_entry_cookie;
    public prev_entry4 [] nad_prev_entry;
    public boolean nad_last_entry;

    public notify_add4() {
    }

    public notify_add4(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        { int $size = nad_old_entry.length; xdr.xdrEncodeInt($size); for ( int $idx = 0; $idx < $size; ++$idx ) { nad_old_entry[$idx].xdrEncode(xdr); } }
        nad_new_entry.xdrEncode(xdr);
        { int $size = nad_new_entry_cookie.length; xdr.xdrEncodeInt($size); for ( int $idx = 0; $idx < $size; ++$idx ) { nad_new_entry_cookie[$idx].xdrEncode(xdr); } }
        { int $size = nad_prev_entry.length; xdr.xdrEncodeInt($size); for ( int $idx = 0; $idx < $size; ++$idx ) { nad_prev_entry[$idx].xdrEncode(xdr); } }
        xdr.xdrEncodeBoolean(nad_last_entry);
    }

    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        { int $size = xdr.xdrDecodeInt(); nad_old_entry = new notify_remove4[$size]; for ( int $idx = 0; $idx < $size; ++$idx ) { nad_old_entry[$idx] = new notify_remove4(xdr); } }
        nad_new_entry = new notify_entry4(xdr);
        { int $size = xdr.xdrDecodeInt(); nad_new_entry_cookie = new nfs_cookie4[$size]; for ( int $idx = 0; $idx < $size; ++$idx ) { nad_new_entry_cookie[$idx] = new nfs_cookie4(xdr); } }
        { int $size = xdr.xdrDecodeInt(); nad_prev_entry = new prev_entry4[$size]; for ( int $idx = 0; $idx < $size; ++$idx ) { nad_prev_entry[$idx] = new prev_entry4(xdr); } }
        nad_last_entry = xdr.xdrDecodeBoolean();
    }

}
// End of notify_add4.java
