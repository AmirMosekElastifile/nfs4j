/*
 * Automatically generated by jrpcgen 1.0.7 on 2/21/09 1:22 AM
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package org.dcache.chimera.nfs.v4.xdr;
import org.dcache.xdr.*;
import java.io.IOException;

public class ssv_sp_parms4 implements XdrAble {
    public state_protect_ops4 ssp_ops;
    public sec_oid4 [] ssp_hash_algs;
    public sec_oid4 [] ssp_encr_algs;
    public uint32_t ssp_window;
    public uint32_t ssp_num_gss_handles;

    public ssv_sp_parms4() {
    }

    public ssv_sp_parms4(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        xdrDecode(xdr);
    }

    public void xdrEncode(XdrEncodingStream xdr)
           throws OncRpcException, IOException {
        ssp_ops.xdrEncode(xdr);
        { int $size = ssp_hash_algs.length; xdr.xdrEncodeInt($size); for ( int $idx = 0; $idx < $size; ++$idx ) { ssp_hash_algs[$idx].xdrEncode(xdr); } }
        { int $size = ssp_encr_algs.length; xdr.xdrEncodeInt($size); for ( int $idx = 0; $idx < $size; ++$idx ) { ssp_encr_algs[$idx].xdrEncode(xdr); } }
        ssp_window.xdrEncode(xdr);
        ssp_num_gss_handles.xdrEncode(xdr);
    }

    public void xdrDecode(XdrDecodingStream xdr)
           throws OncRpcException, IOException {
        ssp_ops = new state_protect_ops4(xdr);
        { int $size = xdr.xdrDecodeInt(); ssp_hash_algs = new sec_oid4[$size]; for ( int $idx = 0; $idx < $size; ++$idx ) { ssp_hash_algs[$idx] = new sec_oid4(xdr); } }
        { int $size = xdr.xdrDecodeInt(); ssp_encr_algs = new sec_oid4[$size]; for ( int $idx = 0; $idx < $size; ++$idx ) { ssp_encr_algs[$idx] = new sec_oid4(xdr); } }
        ssp_window = new uint32_t(xdr);
        ssp_num_gss_handles = new uint32_t(xdr);
    }

}
// End of ssv_sp_parms4.java
